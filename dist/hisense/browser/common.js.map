{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;;;AAAmC;AAC8C;;AAEzC;AACxC;AACA;AACA;AACA;AACA;AACA,CAAC,sCAAsC;AACvC;AACA;AACA;AACA;AACA;AACA,CAAC,0CAA0C;AAC3C;AACA;AACA,+BAA+B,uDAAY;AAC3C,kCAAkC,uDAAY;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6EAA6E,IAAI;AACjF;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAiE;AACjE,uCAAuC,+DAAwB,GAAG,+DAA+D,8VAA8V,aAAa,8DAA8D,yIAAyI;AACnrB,QAAQ,4DAAqB;AAC7B,QAAQ,wDAAiB,0EAA0E,+CAA+C;AAClJ,QAAQ,oDAAa;AACrB,QAAQ,0DAAmB;AAC3B,MAAM;AACN,QAAQ,wDAAiB;AACzB,OAAO,oBAAoB;AAC3B,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,qDAAM;AACV;AACA,iDAAU;AACV,IAAI,qDAAM;AACV;;AAEA;AACA;AACA,2DAA2D;AAC3D,oCAAoC,8DAAuB,GAAG,sBAAsB;AACpF,oCAAoC,8DAAuB,GAAG,eAAe;AAC7E,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB,YAAY,IAAI;AACtC,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,iDAAM;AACxB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS,GAAG,IAAI;AAChB,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAyB,mBAAmB,iEAAiE,IAAI;;AAEnL;AACA;AACA;;AAEA;AACA;AACA;;AAE6E;;;;;;;;;;;;;;;;;;AC5MtC;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;;;;;;;;;;;;;;;ACXA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA","sources":["./node_modules/ngx-wheel/__ivy_ngcc__/fesm2015/ngx-wheel.js","./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js","./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { __decorate } from 'tslib';\nimport { EventEmitter, Input, Output, Component, NgModule } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nvar TextAlignment;\n(function (TextAlignment) {\n    TextAlignment[\"INNER\"] = \"inner\";\n    TextAlignment[\"OUTER\"] = \"outer\";\n    TextAlignment[\"CENTER\"] = \"center\";\n})(TextAlignment || (TextAlignment = {}));\nvar TextOrientation;\n(function (TextOrientation) {\n    TextOrientation[\"HORIZONTAL\"] = \"horizontal\";\n    TextOrientation[\"VERTICAL\"] = \"vertical\";\n    TextOrientation[\"CURVED\"] = \"curved\";\n})(TextOrientation || (TextOrientation = {}));\nlet NgxWheelComponent = class NgxWheelComponent {\n    constructor() {\n        this.onSpinStart = new EventEmitter();\n        this.onSpinComplete = new EventEmitter();\n        this.completedSpin = false;\n        this.isSpinning = false;\n    }\n    reset() {\n        this.wheel.stopAnimation(false);\n        this.wheel.rotationAngle = 0;\n        this.wheel.ctx.clearRect(0, 0, this.wheel.ctx.canvas.width, this.wheel.ctx.canvas.height);\n        this.isSpinning = false;\n        this.completedSpin = false;\n        this.ngAfterViewInit();\n    }\n    ngOnInit() {\n    }\n    spin() {\n        if (this.completedSpin || this.isSpinning)\n            return;\n        this.isSpinning = true;\n        this.onSpinStart.emit(null);\n        const segmentToLandOn = this.wheel.segments.filter(x => !!x).find(({ id }) => this.idToLandOn === id);\n        const segmentTheta = segmentToLandOn.endAngle - segmentToLandOn.startAngle;\n        this.wheel.animation.stopAngle = segmentToLandOn.endAngle - (segmentTheta / 4);\n        this.wheel.startAnimation();\n        setTimeout(() => {\n            this.completedSpin = true;\n            this.onSpinComplete.emit(null);\n        }, this.spinDuration * 1000);\n    }\n    ngAfterViewInit() {\n        const segments = this.items;\n        // @ts-ignore\n        this.wheel = new Winwheel({\n            numSegments: segments.length,\n            segments,\n            innerRadius: this.innerRadius || 0,\n            outerRadius: (this.height / 2) - 20,\n            centerY: (this.height / 2) + 20,\n            textOrientation: this.textOrientation,\n            textAligment: this.textAlignment,\n            animation: {\n                type: 'spinToStop',\n                duration: this.spinDuration,\n                spins: this.spinAmount // The number of complete 360 degree rotations the wheel is to do.\n            }\n        });\n        // @ts-ignore\n        TweenMax.ticker.addEventListener(\"tick\", this.drawPointer.bind(this));\n    }\n    ngOnDestroy() {\n        // @ts-ignore\n        TweenMax.ticker.removeEventListener(\"tick\");\n    }\n    drawPointer() {\n        let c = this.wheel.ctx;\n        // Create pointer.\n        if (c) {\n            c.save();\n            c.lineWidth = 2;\n            c.strokeStyle = this.pointerStrokeColor;\n            c.fillStyle = this.pointerFillColor;\n            c.beginPath();\n            c.moveTo((this.width / 2) - 20, 2);\n            c.lineTo((this.width / 2) + 20, 2);\n            c.lineTo((this.width / 2), 42);\n            c.lineTo((this.width / 2) - 20, 2);\n            c.stroke();\n            c.fill();\n            c.restore();\n        }\n    }\n};\nNgxWheelComponent.ɵfac = function NgxWheelComponent_Factory(t) { return new (t || NgxWheelComponent)(); };\nNgxWheelComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgxWheelComponent, selectors: [[\"ngx-wheel\"]], inputs: { height: \"height\", idToLandOn: \"idToLandOn\", width: \"width\", items: \"items\", spinDuration: \"spinDuration\", spinAmount: \"spinAmount\", innerRadius: \"innerRadius\", pointerStrokeColor: \"pointerStrokeColor\", pointerFillColor: \"pointerFillColor\", disableSpinOnClick: \"disableSpinOnClick\", textOrientation: \"textOrientation\", textAlignment: \"textAlignment\" }, outputs: { onSpinStart: \"onSpinStart\", onSpinComplete: \"onSpinComplete\" }, decls: 2, vars: 2, consts: [[\"id\", \"canvas\", 3, \"width\", \"height\", \"click\"]], template: function NgxWheelComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelementStart(0, \"canvas\", 0);\n        ɵngcc0.ɵɵlistener(\"click\", function NgxWheelComponent_Template_canvas_click_0_listener() { return !ctx.disableSpinOnClick && ctx.spin(); });\n        ɵngcc0.ɵɵtext(1, \" \\u00A0\\u00A0\\u00A0\\u00A0Canvas not supported, use another browser. \");\n        ɵngcc0.ɵɵelementEnd();\n    } if (rf & 2) {\n        ɵngcc0.ɵɵproperty(\"width\", ctx.width)(\"height\", ctx.height);\n    } }, encapsulation: 2 });\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"height\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"idToLandOn\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"width\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"items\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"spinDuration\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"spinAmount\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"innerRadius\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"pointerStrokeColor\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"pointerFillColor\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"disableSpinOnClick\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"textOrientation\", void 0);\n__decorate([\n    Input()\n], NgxWheelComponent.prototype, \"textAlignment\", void 0);\n__decorate([\n    Output()\n], NgxWheelComponent.prototype, \"onSpinStart\", void 0);\n__decorate([\n    Output()\n], NgxWheelComponent.prototype, \"onSpinComplete\", void 0);\n\nlet NgxWheelModule = class NgxWheelModule {\n};\nNgxWheelModule.ɵfac = function NgxWheelModule_Factory(t) { return new (t || NgxWheelModule)(); };\nNgxWheelModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxWheelModule });\nNgxWheelModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[]] });\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxWheelComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-wheel',\n                template: `\n    <canvas (click)='!disableSpinOnClick && spin()' id='canvas' [width]='width' [height]='height'>\n        Canvas not supported, use another browser.\n    </canvas>\n`\n            }]\n    }], function () { return []; }, { onSpinStart: [{\n            type: Output\n        }], onSpinComplete: [{\n            type: Output\n        }], height: [{\n            type: Input\n        }], idToLandOn: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], items: [{\n            type: Input\n        }], spinDuration: [{\n            type: Input\n        }], spinAmount: [{\n            type: Input\n        }], innerRadius: [{\n            type: Input\n        }], pointerStrokeColor: [{\n            type: Input\n        }], pointerFillColor: [{\n            type: Input\n        }], disableSpinOnClick: [{\n            type: Input\n        }], textOrientation: [{\n            type: Input\n        }], textAlignment: [{\n            type: Input\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxWheelModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [NgxWheelComponent],\n                imports: [],\n                exports: [NgxWheelComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxWheelModule, { declarations: [NgxWheelComponent], exports: [NgxWheelComponent] }); })();\n\n/*\n * Public API Surface of ngx-wheel\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxWheelComponent, NgxWheelModule, TextAlignment, TextOrientation };\n\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":[],"sourceRoot":"webpack:///"}