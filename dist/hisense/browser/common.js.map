{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;AAAuC;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL","sources":["./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n"],"names":[],"sourceRoot":"webpack:///"}