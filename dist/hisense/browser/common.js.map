{"version":3,"file":"common.js","mappings":";;;;;;;;;;;;;;;;AAE2D;;;AAKpD,MAAM,UAAU;IAIrB,YAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAFpC,YAAO,GAAG,GAAG,gFAAsB,KAAK,CAAC;IAED,CAAC;IAEzC,WAAW,CAAC,YAAoB,EAAE,OAAO,GAAG,2BAA2B;QACrE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,GAAG,YAAY,CAAC,CAAC;IAC9D,CAAC;IAED,cAAc,CAAC,OAAe,EAAE,UAAU,GAAG,iCAAiC;QAC5E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,GAAG,OAAO,CAAC,CAAC;IAC5D,CAAC;IAED,iBAAiB,CAAC,MAAW,EAAE,UAAU,GAAG,kBAAkB;QAC5D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,UAAU,EAAE;YAC9C,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB,CAAC,IAAS,EAAE,WAAmB,mBAAmB;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,MAAM,CAAC,IAAS,EAAE,WAAmB,4BAA4B;QAC/D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,KAAK,CAAC,IAAS,EAAE,WAAmB,yBAAyB;QAC3D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,IAAI,CAAC,CAAC;IACvD,CAAC;IAED,wBAAwB;IACxB,QAAQ,CAAC,MAAW,EAAE,WAAmB,yBAAyB;QAChE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE;YAC5C,MAAM;SACP,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,WAAmB,oBAAoB;QACzD,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,CAAC,CAAC;IAChD,CAAC;;oEAzCU,UAAU;2GAAV,UAAU,WAAV,UAAU,mBAFT,MAAM;;;;;;;;;;;;;;;;;ACLmB;AACyB;AACzD;AACP,WAAW,mDAAO;AAClB;AACA,yBAAyB,6EAAwB;AACjD;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL","sources":["./src/app/services/api.service.ts","./node_modules/rxjs/dist/esm/internal/operators/takeWhile.js"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ApiService {\r\n\r\n  baseURL = `${environment.baseApiUrl}/v1`;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getSlugData(slugCategory: string, slugURL = '/categories/load-by-slug/') {\r\n    return this.http.get(this.baseURL + slugURL + slugCategory);\r\n  }\r\n\r\n  getVarientData(varient: string, varientURL = '/product-variants/load-by-slug/') {\r\n    return this.http.get(this.baseURL + varientURL + varient);\r\n  }\r\n\r\n  getPressCoverages(params: any, varientURL = '/press-coverages') {\r\n    return this.http.get(this.baseURL + varientURL, {\r\n      params\r\n    });\r\n  }\r\n\r\n  postContactUsForm(body: any, endpoint: string = '/contact-requests') {\r\n    return this.http.post(this.baseURL + endpoint, body);\r\n  }\r\n\r\n  signup(body: any, endpoint: string = '/delightful-india/register') {\r\n    return this.http.post(this.baseURL + endpoint, body);\r\n  }\r\n\r\n  login(body: any, endpoint: string = '/delightful-india/login') {\r\n    return this.http.post(this.baseURL + endpoint, body);\r\n  }\r\n\r\n  // ?username=email1_4788\r\n  getHints(params: any, endpoint: string = '/delightful-india/hints') {\r\n    return this.http.get(this.baseURL + endpoint, {\r\n      params\r\n    });\r\n  }\r\n\r\n  getTechTestimonials(endpoint: string = '/tech-testimonials'){\r\n    return this.http.get(this.baseURL + endpoint);\r\n  }\r\n}\r\n","import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nexport function takeWhile(predicate, inclusive = false) {\n    return operate((source, subscriber) => {\n        let index = 0;\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            const result = predicate(value, index++);\n            (result || inclusive) && subscriber.next(value);\n            !result && subscriber.complete();\n        }));\n    });\n}\n"],"names":[],"sourceRoot":"webpack:///"}