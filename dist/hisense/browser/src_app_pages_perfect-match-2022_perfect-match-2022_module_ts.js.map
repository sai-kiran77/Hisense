{"version":3,"file":"src_app_pages_perfect-match-2022_perfect-match-2022_module_ts.js","mappings":"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","sources":["./src/app/pages/perfect-match-2022/perfect-match-2022.module.ts","./src/app/pages/perfect-match-2022/perfect-match2022.component.ts","./src/app/pages/perfect-match-2022/perfect-match2022.component.html"],"sourcesContent":["import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { PerfectMatch2022Component } from './perfect-match2022.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { NgxWheelModule } from 'ngx-wheel';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: PerfectMatch2022Component\n  }\n];\n\n@NgModule({\n  declarations: [\n    PerfectMatch2022Component\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forChild(routes),\n    NgxWheelModule,\n    ReactiveFormsModule\n  ]\n})\nexport class PerfectMatch2022Module { }\n","import { isPlatformBrowser } from '@angular/common';\nimport { Component, Inject, OnInit, PLATFORM_ID, ViewChild } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { NgxWheelComponent, TextAlignment, TextOrientation } from 'ngx-wheel';\nimport { ApiService } from 'src/app/services/api.service';\n\n@Component({\n  selector: 'app-perfect-match2022',\n  templateUrl: './perfect-match2022.component.html',\n  styleUrls: ['./perfect-match2022.component.scss']\n})\nexport class PerfectMatch2022Component implements OnInit {\n\n\n  width;\n  height;\n  currentStep = 1;\n\n  @ViewChild(NgxWheelComponent, { static: false }) wheel: any;\n  @ViewChild('myaudio', { static: false }) audio: any;\n\n  signupForm = this.fb.group({\n    name: ['', [Validators.required, Validators.pattern(/^[A-Za-z ]+$/)]],\n    email: ['', [Validators.required, Validators.email]],\n    phone: ['', [Validators.required, Validators.minLength(10), Validators.maxLength(10), Validators.pattern(/^[0-9]*$/)]],\n    zipcode: ['', [Validators.required]],\n    // terms: ['', [Validators.required]]\n  });\n\n\n  constructor(@Inject(PLATFORM_ID) private platformId: Object,\n  private fb: FormBuilder,\n  private api: ApiService) {\n    if (isPlatformBrowser(this.platformId)) {\n      if (window.innerWidth <= 768) {\n        this.height = 400;\n        this.width = 400;\n      } else {\n        this.height = 500;\n        this.width = 500;\n      }\n    }\n  }\n\n  seed = ['Umbrella','Football','Water Bottle','Cap','Washing Machine','TV','FIFA 2022 Ticket','Better luck next time'];\n  idToLandOn: any;\n  items: any[] = [];\n  textOrientation: TextOrientation = TextOrientation.HORIZONTAL;\n  textAlignment: TextAlignment = TextAlignment.INNER;\n\n  ngOnInit() {\n    this.idToLandOn = Math.floor(Math.random() * this.seed.length);\n    // const colors = [\"rgb(141,1,248)\", \"rgb(202,1,111)\", \"rgb(251,53,1)\", \"rgb(252,158,2)\", \"rgb(254,129,3)\", \"rgb(98,197,47)\", \"rgb(7,96,237)\", \"rgb(44,19,248)\",];\n    const colors = [\"#d3a774\", \"#fff\"];\n    this.items = this.seed.map((value, i) => ({\n      fillStyle: colors[i % 2],\n      // fillStyle: colors[i] ? colors[i] : colors[i - colors.length],\n      // fillStyle: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\n      text: `${value}`,\n      id: i,\n      textFillStyle: \"black\",\n      textFontSize: \"16\"\n    }));\n  }\n\n  ngAfterViewInit() {\n    // console.log(this.wheel);\n  }\n\n  reset() {\n    this.wheel.reset();\n  }\n  before() {\n    this.isSpinning = true; \n    // alert(\"Your wheel is about to spin\");\n  }\n\n  isSpinning = false;\n\n  async spin(prize?: any) {\n    if(this.isSpinning){\n      return;\n    }\n    if (prize) {\n      this.idToLandOn = prize;\n    } else {\n      this.idToLandOn = Math.floor(Math.random() * this.seed.length);\n    }\n    await new Promise((resolve) => setTimeout(resolve, 0));\n    this.wheel.spin();\n  }\n\n  after() {\n    // alert(\"You have been bamboozled\");\n    this.audio.nativeElement.play();\n    // audio.play();\n    this.isSpinning = false;\n    setTimeout(() => {\n      alert(`Congratulations you have won Prize ${this.seed[this.idToLandOn]}`);\n    }, 750)\n    setTimeout(() => {\n      this.wheel.reset();\n      // this.idToLandOn = Math.floor(Math.random() * this.seed.length);\n    }, 1000);\n  }\n\n  imageLoading = true;\n\n  imageLoaded() {\n    this.imageLoading = false;\n  }\n\n  isSignupFormSubmitted = false;\n  signupLoading = false;\n  loggedInUserData: any;\n\n  onSubmit(){\n    this.isSignupFormSubmitted = true;\n    this.signupLoading = true;\n    if (this.signupForm && this.signupForm.valid) {\n      this.api.PerfectMatch(this.signupForm.value).subscribe((res: any) => {\n        this.loggedInUserData = res.data;\n        this.signupLoading = false;\n        this.currentStep = 2;\n        // this.modalMessage = res.message;\n        // if (isPlatformBrowser(this.platformId)) {\n        //   localStorage.setItem('username', res.data.username);\n        // }\n        // this.LoginForm.setValue({\n        //   username: res.data.username,\n        //   password: res.data.password,\n        // })\n        // this.showSignupForm = false;\n        // this.showLoginForm = true;\n        // if (isPlatformBrowser(this.platformId)) {\n        //   localStorage.setItem('username', res.data.username);\n        //   localStorage.setItem('delightful_india_code', res.data.delightful_india_code);\n        // }\n      }, (err: any) => {\n        console.log(err);\n        this.signupLoading = false;\n        console.log(err);\n        // this.modalMessage = err.error.message;\n        // this.modalMessage = err.message;\n      })\n    } else {\n      this.signupLoading = false;\n\n    }\n  }\n}\n","<div class=\"bg-image\"></div>\n<div class=\"page__wrapper card\" [ngClass]=\"{'is-loading': imageLoading}\">\n    <img src=\"assets/Spin-The-Wheel-Website-Banner.jpg\" (load)=\"imageLoaded()\" style=\"display: none;\">\n    <ng-container *ngIf=\"currentStep == 1\">\n        <form [formGroup]=\"signupForm\">\n            <div class=\"form__blur\"></div>\n            <div class=\"container\">\n                <h2>Register Now</h2>\n                <p>Please fill the form to create an account.</p>\n                <hr>\n\n                <div>\n                    <label for=\"name\"><b>Name</b><span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" placeholder=\"Enter Name\" name=\"name\" id=\"name\" formControlName=\"name\">\n                    <div class=\"text-danger\" *ngIf=\"isSignupFormSubmitted && signupForm.controls['name'].errors\">\n                        <span *ngIf=\"signupForm.controls['name'].errors['required']\">Name is required!</span>\n                        <span *ngIf=\"signupForm.controls['name'].errors['pattern']\">Name can only contain\n                            alphabets!</span>\n                    </div>\n                </div>\n\n                <div>\n                    <label for=\"email\"><b>Email</b><span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" placeholder=\"Enter Email\" name=\"email\" id=\"email\" formControlName=\"email\">\n                    <div class=\"text-danger\" *ngIf=\"isSignupFormSubmitted && signupForm.controls['email'].errors\">\n                        <span *ngIf=\"signupForm.controls['email'].errors['required']\">Email is required!</span>\n                        <span *ngIf=\"signupForm.controls['email'].errors['email']\">Enter a valid email!</span>\n                    </div>\n                </div>\n\n                <div>\n                    <label for=\"phone\"><b>Phone</b><span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" placeholder=\"Enter Phone Number\" name=\"phone\" formControlName=\"phone\">\n                    <div class=\"text-danger\" *ngIf=\"isSignupFormSubmitted && signupForm.controls['phone'].errors\">\n                        <span *ngIf=\"signupForm.controls['phone'].errors['required']\">Phone Number is\n                            required!</span>\n                        <span *ngIf=\"signupForm.controls['phone'].errors['minlength']\">Phone Number can only contain\n                            10\n                            digits!</span>\n                        <span *ngIf=\"signupForm.controls['phone'].errors['maxlength']\">Phone Number can only contain\n                            10\n                            digits!</span>\n                        <span *ngIf=\"signupForm.controls['phone'].errors['pattern']\">Phone Number can only contain\n                            digits!</span>\n                    </div>\n                </div>\n\n                <div>\n                    <label for=\"pincode\"><b>Pincode</b><span class=\"text-danger\">*</span></label>\n                    <input type=\"text\" placeholder=\"Enter Pincode\" name=\"pincode\" id=\"pincode\"\n                        formControlName=\"zipcode\">\n                    <div class=\"text-danger\" *ngIf=\"isSignupFormSubmitted && signupForm.controls['zipcode'].errors\">\n                        <span *ngIf=\"signupForm.controls['zipcode'].errors['required']\">Pincode is required!</span>\n                    </div>\n                </div>\n\n                <div class=\"clearfix\">\n                    <button type=\"button\" class=\"submit__btn\" (click)=\"onSubmit()\">\n                        <span>Submit</span>\n                        <span *ngIf=\"signupLoading\" class=\"loader\"></span>\n                    </button>\n                </div>\n            </div>\n        </form>\n    </ng-container>\n\n    <ng-container *ngIf=\"currentStep == 2\">\n        <ng-container *ngIf=\"!imageLoading\">\n            <!-- <h1>Wheel of Fortune</h1>\n            <h3>Try your luck by participating below</h3> -->\n            <form class=\"spinner__wrapper\">\n                <div class=\"icon\">\n                    <div class=\"absolute spin-btn-wrap\">\n                        <button type=\"button\"\n                            class=\"aha-button spinner-wheel-spin-button spin-btn aha-button-xs aha-button-primary\">\n                            <!-- <svg width=\"40\" height=\"40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" name=\"play\"\n                                class=\"path-fill-current inline-block\" viewBox=\"0 0 22 24\">\n                                <path\n                                    d=\"M19.669 10.385L6.199 2.257c-1.094-.66-2.77-.02-2.77 1.613v16.253c0 1.465 1.557 2.348 2.77 1.613l13.47-8.124c1.201-.723 1.205-2.504 0-3.227z\"\n                                    fill=\"#fff\"></path>\n                            </svg> -->\n                        </button>\n                    </div>\n                </div>\n                <ng-container *ngIf=\"width && height\">\n                    <ngx-wheel Roulette [width]=\"width\" [height]=\"height\" [spinDuration]=\"8\" [items]=\"items\"\n                        [innerRadius]=\"20\" [spinAmount]=\"10\" [textOrientation]=\"textOrientation\"\n                        [textAlignment]=\"textAlignment\" pointerStrokeColor=\"white\" [pointerFillColor]=\"'#d3a774'\"\n                        [idToLandOn]=\"idToLandOn\" [disableSpinOnClick]=\"true\" (onSpinStart)=\"before()\"\n                        (onSpinComplete)=\"after()\">\n                    </ngx-wheel>\n                </ng-container>\n                <div class=\"clearfix\">\n                    <button type=\"button\" class=\"submit__btn\" (click)=\"spin()\">\n                        <span>Spin</span>\n                        <span *ngIf=\"isSpinning\" class=\"loader\"></span>\n                    </button>\n                </div>\n            </form>\n        </ng-container>\n    </ng-container>\n</div>\n\n<audio #myaudio id=\"myAudio\">\n    <source src=\"../../../assets/audio/mixkit-fantasy-game-success-notification-270.wav\" type=\"audio/ogg\">\n    Your browser does not support the audio element.\n</audio>"],"names":["isPlatformBrowser","PLATFORM_ID","Validators","NgxWheelComponent","TextAlignment","TextOrientation","i0","ctx_r17","ctx_r22","ctx_r24","ctx_r20","ctx_r25","PerfectMatch2022Component","constructor","platformId","fb","api","group","name","required","pattern","email","phone","minLength","maxLength","zipcode","HORIZONTAL","INNER","window","innerWidth","height","width","ngOnInit","idToLandOn","Math","floor","random","seed","length","colors","items","map","value","i","fillStyle","text","id","textFillStyle","textFontSize","ngAfterViewInit","reset","wheel","before","isSpinning","spin","prize","Promise","resolve","setTimeout","after","audio","nativeElement","play","alert","imageLoaded","imageLoading","onSubmit","isSignupFormSubmitted","signupLoading","signupForm","valid","PerfectMatch","subscribe","res","loggedInUserData","data","currentStep","err","console","log","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///"}