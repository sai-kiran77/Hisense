{"version":3,"file":"src_app_pages_spinner_spinner_module_ts.js","mappings":"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","sources":["./src/app/pages/spinner/spinner.component.ts","./src/app/pages/spinner/spinner.component.html","./src/app/pages/spinner/spinner.module.ts"],"sourcesContent":["import { isPlatformBrowser } from '@angular/common';\r\nimport { Component, Inject, OnInit, PLATFORM_ID, ViewChild } from '@angular/core';\r\nimport { Routes } from '@angular/router';\r\nimport { NgxWheelComponent, TextAlignment, TextOrientation } from 'ngx-wheel';\r\n\r\n@Component({\r\n  selector: 'app-spinner',\r\n  templateUrl: './spinner.component.html',\r\n  styleUrls: ['./spinner.component.scss']\r\n})\r\nexport class SpinnerComponent implements OnInit {\r\n\r\n  width;\r\n  height;\r\n\r\n  @ViewChild(NgxWheelComponent, { static: false }) wheel: any;\r\n  @ViewChild('myaudio', { static: false }) audio: any;\r\n\r\n\r\n  constructor(@Inject(PLATFORM_ID) private platformId: Object) {\r\n    if (isPlatformBrowser(this.platformId)) {\r\n      if (window.innerWidth <= 768) {\r\n        this.height = 400;\r\n        this.width = 400;\r\n      } else {\r\n        this.height = 500;\r\n        this.width = 500;\r\n      }\r\n    }\r\n  }\r\n\r\n  seed = [...Array(12).keys()];\r\n  idToLandOn: any;\r\n  items: any[] = [];\r\n  textOrientation: TextOrientation = TextOrientation.HORIZONTAL;\r\n  textAlignment: TextAlignment = TextAlignment.OUTER;\r\n\r\n  ngOnInit() {\r\n    this.idToLandOn = this.seed[Math.floor(Math.random() * this.seed.length)];\r\n    const colors = [\"rgb(141,1,248)\", \"rgb(202,1,111)\", \"rgb(251,53,1)\", \"rgb(252,158,2)\", \"rgb(254,129,3)\", \"rgb(98,197,47)\", \"rgb(7,96,237)\", \"rgb(44,19,248)\",];\r\n    this.items = this.seed.map((value, i) => ({\r\n      fillStyle: colors[i] ? colors[i] : colors[i - colors.length],\r\n      // fillStyle: `#${Math.floor(Math.random() * 16777215).toString(16)}`,\r\n      text: `Prize ${value}`,\r\n      id: value,\r\n      textFillStyle: \"white\",\r\n      textFontSize: \"16\"\r\n    }));\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    // console.log(this.wheel);\r\n  }\r\n\r\n  reset() {\r\n    this.wheel.reset();\r\n  }\r\n  before() {\r\n    // alert(\"Your wheel is about to spin\");\r\n  }\r\n\r\n  async spin(prize?: any) {\r\n    if (prize) {\r\n      this.idToLandOn = prize;\r\n    } else {\r\n      this.idToLandOn = this.seed[Math.floor(Math.random() * this.seed.length)];\r\n    }\r\n    await new Promise((resolve) => setTimeout(resolve, 0));\r\n    this.wheel.spin();\r\n  }\r\n\r\n  after() {\r\n    // alert(\"You have been bamboozled\");\r\n    this.audio.nativeElement.play();\r\n    // audio.play();\r\n    setTimeout(() => {\r\n      alert(`Congratulations you have won Prize ${this.seed[this.idToLandOn]}`);\r\n    }, 750)\r\n    setTimeout(() => {\r\n      this.wheel.reset();\r\n      this.idToLandOn = this.seed[Math.floor(Math.random() * this.seed.length)];\r\n    }, 1000);\r\n  }\r\n\r\n  imageLoading = true;\r\n\r\n  imageLoaded() {\r\n    this.imageLoading = false;\r\n  }\r\n}\r\n","<div class=\"page__wrapper card\" [ngClass]=\"{'is-loading': imageLoading}\">\r\n    <img src=\"../../../assets/party.jpg\" alt=\"party banner\" (load)=\"imageLoaded()\" style=\"display: none;\">\r\n    <ng-container *ngIf=\"!imageLoading\">\r\n        <h1>Wheel of Fortune</h1>\r\n        <h3>Try your luck by participating below</h3>\r\n        <div class=\"spinner__wrapper\">\r\n            <div class=\"icon\" (click)=\"spin()\">\r\n                <div class=\"absolute spin-btn-wrap\">\r\n                    <button type=\"button\"\r\n                        class=\"aha-button spinner-wheel-spin-button spin-btn aha-button-xs aha-button-primary\">\r\n                        <svg width=\"40\" height=\"40\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" name=\"play\"\r\n                            class=\"path-fill-current inline-block\" viewBox=\"0 0 22 24\">\r\n                            <path\r\n                                d=\"M19.669 10.385L6.199 2.257c-1.094-.66-2.77-.02-2.77 1.613v16.253c0 1.465 1.557 2.348 2.77 1.613l13.47-8.124c1.201-.723 1.205-2.504 0-3.227z\"\r\n                                fill=\"#fff\"></path>\r\n                        </svg>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <ng-container *ngIf=\"width && height\">\r\n                <ngx-wheel Roulette [width]=\"width\" [height]=\"height\" [spinDuration]=\"8\" [items]=\"items\" [innerRadius]=\"20\"\r\n                    [spinAmount]=\"10\" [textOrientation]=\"textOrientation\" [textAlignment]=\"textAlignment\"\r\n                    pointerStrokeColor=\"white\" [pointerFillColor]=\"'rgba(59,130,246,0.5)'\" [idToLandOn]=\"idToLandOn\"\r\n                    (onSpinStart)=\"before()\" (onSpinComplete)=\"after()\">\r\n                </ngx-wheel>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n</div>\r\n\r\n<audio #myaudio id=\"myAudio\">\r\n    <source src=\"../../../assets/audio/mixkit-fantasy-game-success-notification-270.wav\" type=\"audio/ogg\">\r\n    Your browser does not support the audio element.\r\n</audio>","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { SpinnerComponent } from './spinner.component';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { NgxWheelModule } from 'ngx-wheel';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '', component: SpinnerComponent\r\n  }\r\n]\r\n\r\n@NgModule({\r\n  declarations: [\r\n    SpinnerComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    NgxWheelModule,\r\n    RouterModule.forChild(routes)\r\n  ]\r\n})\r\nexport class SpinnerModule { }\r\n"],"names":["isPlatformBrowser","PLATFORM_ID","NgxWheelComponent","TextAlignment","TextOrientation","i0","ctx_r3","ctx_r5","ctx_r2","ctx_r6","SpinnerComponent","constructor","platformId","Array","keys","HORIZONTAL","OUTER","window","innerWidth","height","width","ngOnInit","idToLandOn","seed","Math","floor","random","length","colors","items","map","value","i","fillStyle","text","id","textFillStyle","textFontSize","ngAfterViewInit","reset","wheel","before","spin","prize","Promise","resolve","setTimeout","after","audio","nativeElement","play","alert","imageLoaded","imageLoading","selectors","viewQuery","ctx"],"sourceRoot":"webpack:///"}